package config

import (
	"encoding/json"
)

type AutoGenerated struct {
	Success   bool    `json:"success"`
	Errcode   int     `json:"errcode"`
	Message   string  `json:"message"`
	Data      []AData `json:"data"`
	Timestamp int     `json:"timestamp"`
}

type AData struct {
	Match           []CurrentGamePlayers
	Season          int     `json:"season"`
	MatchCode       string  `json:"match_code"`
	MatchType       string  `json:"match_type"`
	GameType        string  `json:"game_type"`
	StartTime       string  `json:"start_time"`
	EndTime         string  `json:"end_time"`
	EndDate         string  `json:"end_date"`
	RoundTime       string  `json:"round_time"`
	Map             string  `json:"map"`
	Score1          string  `json:"score1"`
	Score2          string  `json:"score2"`
	Kill            string  `json:"kill"`
	IsMVP           string  `json:"is_mvp"`
	IsMost1v2       string  `json:"is_most_1v2"`
	IsMostHeadshot  string  `json:"is_most_headshot"`
	IsMostFirstKill string  `json:"is_most_first_kill"`
	IsMostEnd       string  `json:"is_most_end"`
	IsMostAWP       string  `json:"is_most_awp"`
	IsMostJump      string  `json:"is_most_jump"`
	IsWin           string  `json:"is_win"`
	RWS             string  `json:"rws"`
	Rating          string  `json:"rating"`
	DemoURL         string  `json:"demo_url"`
	Death           string  `json:"death"`
	KD              float64 `json:"kd"`
	PerHeadshot     string  `json:"per_headshot"`
	Kill5           string  `json:"kill_5"`
	Kill10          int     `json:"kill_10"`
	Assist          string  `json:"assist"`
	IsCreditMatch   int     `json:"is_credit_match"`
}
type PlayerInfo struct {
	Name       string              //名字
	PlayerID   string              //ID
	AvatarURL  string              //头像地址
	ProfileURL string              //个人简介地址
	FriendInfo []FriendInformation //好友列表
}
type CurrentGamePlayers struct {
	Data        string              `json:"data"`
	Name        string              `json:"name"`
	Teammate    string              `json:"teammate"`
	Avatar      string              `json:"avatar"`
	Up          int                 `json:"up"`
	Nameid      string              `json:"nameid"`
	TeammateIds []FriendInformation `json:"teammate_ids"`
}
type CurrentGamePlayersArray struct {
	Match       []CurrentGamePlayers `json:"-"`
	Nameid      string               `json:"nameid"`
	Name        string               `json:"name"`
	Location    int                  `json:"-"`
	Teammate    string               `json:"-"`
	TeammateIds []FriendInformation  `json:"teammate_ids"`
	MatchCode   string               `json:"-"`
	RecordURL   string               `json:"-"`
}
type FriendInformation struct {
	Name      string   `json:"name"`
	Match     string   `json:"match"`
	RecordURL []string `json:"record_url"`
}
type GinRequestParams struct {
	Data string `json:"data"`
}

func (t *CurrentGamePlayersArray) AddMatchRecord(matchRecord FriendInformation) {
	t.TeammateIds = append(t.TeammateIds, matchRecord)
}

func (t *CurrentGamePlayersArray) AddMatchRecords(matchRecord FriendInformation) {

	for i, v := range t.TeammateIds {
		if v.Name == matchRecord.Name {
			t.TeammateIds[i].RecordURL = append(v.RecordURL, matchRecord.RecordURL...)
		}
	}

}

func (this *CurrentGamePlayersArray) Append(T FriendInformation) {

	for _, value := range this.TeammateIds {
		if value.Name == T.Name {
			return
		}
	}
	this.TeammateIds = append(this.TeammateIds, T)

	//var b int
	//for _, v := range this.TeammateIds {
	//	if v.Match != T.Match {
	//		b = b + 1
	//	}
	//}
	//if v.Match != T.Match {
	//	this.TeammateIds = append(this.TeammateIds, T)
	//}
}

func Deserialize(b []byte) (*AutoGenerated, error) {
	var a AutoGenerated
	err := json.Unmarshal(b, &a)
	if err != nil {
		return nil, err
	}

	return &a, nil
}

//func (this *CurrentGamePlayers) Match() {
//
//	//this.Data = utils.ExtractTextBetween(data, "name tleft ban-bg", "icon_wrap")
//	//for _, v := range this.Data {
//	this.Name, _ = utils.GetTextBetween(this.Data, "username-tooltips\">", "</span>")
//	this.Teammate, _ = utils.GetTextBetween(this.Data, "class=\"formation", "icon-titletip")
//	this.Avatar, _ = utils.GetTextBetween(this.Data, "avatar\" src=\"", "\"")
//	this.Nameid, _ = utils.GetTextBetween(this.Data, "https://arena.5eplay.com/data/player/", "\"")
//
//	//}
//}
